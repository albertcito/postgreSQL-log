version: 2
jobs:
  build:

    # Primary container image where all commands run

    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          TEST_DATABASE_URL: postgresql://db_user@localhost/example_db

    # Service container image

      - image: circleci/postgres:9.6.5-alpine-ram
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: db_user
          POSTGRES_DB: example_db
          POSTGRES_PASSWORD: 1234

    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-9.6
      - run: whoami
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i db_init/audit_get_table_columns.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i db_init/audit_column_to_query.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i db_init/audit_table_column_added.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i db_init/audit_table_column_updated.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i db_init/audit_table_copy.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i db_init/audit_table_triggers.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i db_init/audit_table.sql;"
      ## Start testing
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "CREATE DATABASE audit;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i test/base.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i test/copy_fn_to_audit.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i test/test_add_column.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i test/test_alter_column.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i test/test_audit_insert.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "\i test/audit_run_tests.sql;"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "SELECT audit_run_tests();"